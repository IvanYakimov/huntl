WARNING: You're attempting to print out a bitcode file.
This is inadvisable as it may cause display problems. If
you REALLY want to taste LLVM bitcode first-hand, you
can force output with the `-f' option.

//test suite for test_strcpy
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
//test suite for test_strncpy
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  libc.so.6        0x00007fe8288ea428 gsignal + 56
4  libc.so.6        0x00007fe8288ec02a abort + 362
5  libstdc++.so.6   0x00007fe828d0e84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007fe828d0c6b6
7  libstdc++.so.6   0x00007fe828d0c701
8  libstdc++.so.6   0x00007fe828d0c919
9  libcvc4.so.6     0x00007fe8263b945a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007fe8263d4ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007fe82728ffef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007fe8272750af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007fe827286b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007fe8272871da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007fe827287069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007fe827287c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007fe827298900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007fe82723d307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007fe827274320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007fe82726e9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007fe82726b92a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007fe82727386b
25 huntl.so         0x00007fe827272c63
26 huntl.so         0x00007fe827271f35
27 huntl.so         0x00007fe827271030
28 huntl.so         0x00007fe82726ff35
29 huntl.so         0x00007fe82726ee15
30 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007fe827299fe5
36 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
//test suite for test_strlcpy
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  huntl.so         0x00007fe827273dd0
4  huntl.so         0x00007fe827273460
5  huntl.so         0x00007fe82727250d
6  huntl.so         0x00007fe827271a03
7  huntl.so         0x00007fe82727100b
8  huntl.so         0x00007fe82726ff35
9  huntl.so         0x00007fe82726ee15
10 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007fe827273ec7
15 huntl.so         0x00007fe82727461b
16 huntl.so         0x00007fe8272745f5
17 huntl.so         0x00007fe827273f39
18 huntl.so         0x00007fe8272737e3
19 huntl.so         0x00007fe827272c63
20 huntl.so         0x00007fe827271f35
21 huntl.so         0x00007fe827271030
22 huntl.so         0x00007fe82726ff35
23 huntl.so         0x00007fe82726ee15
24 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007fe82727386b
29 huntl.so         0x00007fe827272c63
30 huntl.so         0x00007fe827271f35
31 huntl.so         0x00007fe827271030
32 huntl.so         0x00007fe82726ff35
33 huntl.so         0x00007fe82726ee15
34 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007fe827299fe5
40 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  huntl.so         0x00007fe827273dd0
4  huntl.so         0x00007fe827273460
5  huntl.so         0x00007fe82727250d
6  huntl.so         0x00007fe827271a03
7  huntl.so         0x00007fe82727100b
8  huntl.so         0x00007fe82726ff35
9  huntl.so         0x00007fe82726ee15
10 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007fe827273ec7
15 huntl.so         0x00007fe82727461b
16 huntl.so         0x00007fe8272745f5
17 huntl.so         0x00007fe827273f39
18 huntl.so         0x00007fe8272737e3
19 huntl.so         0x00007fe827272c63
20 huntl.so         0x00007fe827271f35
21 huntl.so         0x00007fe827271030
22 huntl.so         0x00007fe82726ff35
23 huntl.so         0x00007fe82726ee15
24 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007fe82727386b
29 huntl.so         0x00007fe827272c63
30 huntl.so         0x00007fe827271f35
31 huntl.so         0x00007fe827271030
32 huntl.so         0x00007fe82726ff35
33 huntl.so         0x00007fe82726ee15
34 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007fe827299fe5
40 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  huntl.so         0x00007fe827273dd0
4  huntl.so         0x00007fe827273460
5  huntl.so         0x00007fe82727250d
6  huntl.so         0x00007fe827271a03
7  huntl.so         0x00007fe82727100b
8  huntl.so         0x00007fe82726ff35
9  huntl.so         0x00007fe82726ee15
10 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007fe827273ec7
15 huntl.so         0x00007fe82727461b
16 huntl.so         0x00007fe8272745f5
17 huntl.so         0x00007fe827273f39
18 huntl.so         0x00007fe8272737e3
19 huntl.so         0x00007fe827272c63
20 huntl.so         0x00007fe827271f35
21 huntl.so         0x00007fe827271030
22 huntl.so         0x00007fe82726ff35
23 huntl.so         0x00007fe82726ee15
24 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007fe82727386b
29 huntl.so         0x00007fe827272c63
30 huntl.so         0x00007fe827271f35
31 huntl.so         0x00007fe827271030
32 huntl.so         0x00007fe82726ff35
33 huntl.so         0x00007fe82726ee15
34 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007fe827299fe5
40 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  huntl.so         0x00007fe827273dd0
4  huntl.so         0x00007fe827273460
5  huntl.so         0x00007fe82727250d
6  huntl.so         0x00007fe827271a03
7  huntl.so         0x00007fe82727100b
8  huntl.so         0x00007fe82726ff35
9  huntl.so         0x00007fe82726ee15
10 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007fe827273ec7
15 huntl.so         0x00007fe82727461b
16 huntl.so         0x00007fe8272745f5
17 huntl.so         0x00007fe827273f39
18 huntl.so         0x00007fe8272737e3
19 huntl.so         0x00007fe827272c63
20 huntl.so         0x00007fe827271f35
21 huntl.so         0x00007fe827271030
22 huntl.so         0x00007fe82726ff35
23 huntl.so         0x00007fe82726ee15
24 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007fe82727386b
29 huntl.so         0x00007fe827272c63
30 huntl.so         0x00007fe827271f35
31 huntl.so         0x00007fe827271030
32 huntl.so         0x00007fe82726ff35
33 huntl.so         0x00007fe82726ee15
34 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007fe827299fe5
40 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  huntl.so         0x00007fe827273dd0
4  huntl.so         0x00007fe827273460
5  huntl.so         0x00007fe82727250d
6  huntl.so         0x00007fe827271a03
7  huntl.so         0x00007fe82727100b
8  huntl.so         0x00007fe82726ff35
9  huntl.so         0x00007fe82726ee15
10 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007fe827273ec7
15 huntl.so         0x00007fe82727461b
16 huntl.so         0x00007fe8272745f5
17 huntl.so         0x00007fe827273f39
18 huntl.so         0x00007fe8272737e3
19 huntl.so         0x00007fe827272c63
20 huntl.so         0x00007fe827271f35
21 huntl.so         0x00007fe827271030
22 huntl.so         0x00007fe82726ff35
23 huntl.so         0x00007fe82726ee15
24 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007fe82727386b
29 huntl.so         0x00007fe827272c63
30 huntl.so         0x00007fe827271f35
31 huntl.so         0x00007fe827271030
32 huntl.so         0x00007fe82726ff35
33 huntl.so         0x00007fe82726ee15
34 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007fe827299fe5
40 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  huntl.so         0x00007fe827273dd0
4  huntl.so         0x00007fe827273460
5  huntl.so         0x00007fe82727250d
6  huntl.so         0x00007fe827271a03
7  huntl.so         0x00007fe82727100b
8  huntl.so         0x00007fe82726ff35
9  huntl.so         0x00007fe82726ee15
10 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007fe827273ec7
15 huntl.so         0x00007fe82727461b
16 huntl.so         0x00007fe8272745f5
17 huntl.so         0x00007fe827273f39
18 huntl.so         0x00007fe8272737e3
19 huntl.so         0x00007fe827272c63
20 huntl.so         0x00007fe827271f35
21 huntl.so         0x00007fe827271030
22 huntl.so         0x00007fe82726ff35
23 huntl.so         0x00007fe82726ee15
24 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007fe82727386b
29 huntl.so         0x00007fe827272c63
30 huntl.so         0x00007fe827271f35
31 huntl.so         0x00007fe827271030
32 huntl.so         0x00007fe82726ff35
33 huntl.so         0x00007fe82726ee15
34 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007fe827299fe5
40 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  huntl.so         0x00007fe827273dd0
4  huntl.so         0x00007fe827273460
5  huntl.so         0x00007fe82727250d
6  huntl.so         0x00007fe827271a03
7  huntl.so         0x00007fe82727100b
8  huntl.so         0x00007fe82726ff35
9  huntl.so         0x00007fe82726ee15
10 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007fe827273ec7
15 huntl.so         0x00007fe82727461b
16 huntl.so         0x00007fe8272745f5
17 huntl.so         0x00007fe827273f39
18 huntl.so         0x00007fe8272737e3
19 huntl.so         0x00007fe827272c63
20 huntl.so         0x00007fe827271f35
21 huntl.so         0x00007fe827271030
22 huntl.so         0x00007fe82726ff35
23 huntl.so         0x00007fe82726ee15
24 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007fe82727386b
29 huntl.so         0x00007fe827272c63
30 huntl.so         0x00007fe827271f35
31 huntl.so         0x00007fe827271030
32 huntl.so         0x00007fe82726ff35
33 huntl.so         0x00007fe82726ee15
34 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007fe827299fe5
40 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  huntl.so         0x00007fe827273dd0
4  huntl.so         0x00007fe827273460
5  huntl.so         0x00007fe82727250d
6  huntl.so         0x00007fe827271a03
7  huntl.so         0x00007fe82727100b
8  huntl.so         0x00007fe82726ff35
9  huntl.so         0x00007fe82726ee15
10 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007fe827273ec7
15 huntl.so         0x00007fe82727461b
16 huntl.so         0x00007fe8272745f5
17 huntl.so         0x00007fe827273f39
18 huntl.so         0x00007fe8272737e3
19 huntl.so         0x00007fe827272c63
20 huntl.so         0x00007fe827271f35
21 huntl.so         0x00007fe827271030
22 huntl.so         0x00007fe82726ff35
23 huntl.so         0x00007fe82726ee15
24 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007fe82727386b
29 huntl.so         0x00007fe827272c63
30 huntl.so         0x00007fe827271f35
31 huntl.so         0x00007fe827271030
32 huntl.so         0x00007fe82726ff35
33 huntl.so         0x00007fe82726ee15
34 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007fe827299fe5
40 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  huntl.so         0x00007fe827273dd0
4  huntl.so         0x00007fe827273460
5  huntl.so         0x00007fe82727250d
6  huntl.so         0x00007fe827271a03
7  huntl.so         0x00007fe82727100b
8  huntl.so         0x00007fe82726ff35
9  huntl.so         0x00007fe82726ee15
10 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007fe827273ec7
15 huntl.so         0x00007fe82727461b
16 huntl.so         0x00007fe8272745f5
17 huntl.so         0x00007fe827273f39
18 huntl.so         0x00007fe8272737e3
19 huntl.so         0x00007fe827272c63
20 huntl.so         0x00007fe827271f35
21 huntl.so         0x00007fe827271030
22 huntl.so         0x00007fe82726ff35
23 huntl.so         0x00007fe82726ee15
24 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007fe82727386b
29 huntl.so         0x00007fe827272c63
30 huntl.so         0x00007fe827271f35
31 huntl.so         0x00007fe827271030
32 huntl.so         0x00007fe82726ff35
33 huntl.so         0x00007fe82726ee15
34 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007fe827299fe5
40 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  huntl.so         0x00007fe827273dd0
4  huntl.so         0x00007fe827273460
5  huntl.so         0x00007fe82727250d
6  huntl.so         0x00007fe827271a03
7  huntl.so         0x00007fe82727100b
8  huntl.so         0x00007fe82726ff35
9  huntl.so         0x00007fe82726ee15
10 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007fe827273ec7
15 huntl.so         0x00007fe82727461b
16 huntl.so         0x00007fe8272745f5
17 huntl.so         0x00007fe827273f39
18 huntl.so         0x00007fe8272737e3
19 huntl.so         0x00007fe827272c63
20 huntl.so         0x00007fe827271f35
21 huntl.so         0x00007fe827271030
22 huntl.so         0x00007fe82726ff35
23 huntl.so         0x00007fe82726ee15
24 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007fe82727386b
29 huntl.so         0x00007fe827272c63
30 huntl.so         0x00007fe827271f35
31 huntl.so         0x00007fe827271030
32 huntl.so         0x00007fe82726ff35
33 huntl.so         0x00007fe82726ee15
34 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007fe827299fe5
40 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  huntl.so         0x00007fe827273dd0
4  huntl.so         0x00007fe827273460
5  huntl.so         0x00007fe82727250d
6  huntl.so         0x00007fe827271a03
7  huntl.so         0x00007fe82727100b
8  huntl.so         0x00007fe82726ff35
9  huntl.so         0x00007fe82726ee15
10 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007fe827273ec7
15 huntl.so         0x00007fe82727461b
16 huntl.so         0x00007fe8272745f5
17 huntl.so         0x00007fe827273f39
18 huntl.so         0x00007fe8272737e3
19 huntl.so         0x00007fe827272c63
20 huntl.so         0x00007fe827271f35
21 huntl.so         0x00007fe827271030
22 huntl.so         0x00007fe82726ff35
23 huntl.so         0x00007fe82726ee15
24 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007fe82727386b
29 huntl.so         0x00007fe827272c63
30 huntl.so         0x00007fe827271f35
31 huntl.so         0x00007fe827271030
32 huntl.so         0x00007fe82726ff35
33 huntl.so         0x00007fe82726ee15
34 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007fe827299fe5
40 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  huntl.so         0x00007fe827273dd0
4  huntl.so         0x00007fe827273460
5  huntl.so         0x00007fe82727250d
6  huntl.so         0x00007fe827271a03
7  huntl.so         0x00007fe82727100b
8  huntl.so         0x00007fe82726ff35
9  huntl.so         0x00007fe82726ee15
10 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007fe827273ec7
15 huntl.so         0x00007fe82727461b
16 huntl.so         0x00007fe8272745f5
17 huntl.so         0x00007fe827273f39
18 huntl.so         0x00007fe8272737e3
19 huntl.so         0x00007fe827272c63
20 huntl.so         0x00007fe827271f35
21 huntl.so         0x00007fe827271030
22 huntl.so         0x00007fe82726ff35
23 huntl.so         0x00007fe82726ee15
24 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007fe82727386b
29 huntl.so         0x00007fe827272c63
30 huntl.so         0x00007fe827271f35
31 huntl.so         0x00007fe827271030
32 huntl.so         0x00007fe82726ff35
33 huntl.so         0x00007fe82726ee15
34 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007fe827299fe5
40 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  huntl.so         0x00007fe827273dd0
4  huntl.so         0x00007fe827273460
5  huntl.so         0x00007fe82727250d
6  huntl.so         0x00007fe827271a03
7  huntl.so         0x00007fe82727100b
8  huntl.so         0x00007fe82726ff35
9  huntl.so         0x00007fe82726ee15
10 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007fe827273ec7
15 huntl.so         0x00007fe82727461b
16 huntl.so         0x00007fe8272745f5
17 huntl.so         0x00007fe827273f39
18 huntl.so         0x00007fe8272737e3
19 huntl.so         0x00007fe827272c63
20 huntl.so         0x00007fe827271f35
21 huntl.so         0x00007fe827271030
22 huntl.so         0x00007fe82726ff35
23 huntl.so         0x00007fe82726ee15
24 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007fe82727386b
29 huntl.so         0x00007fe827272c63
30 huntl.so         0x00007fe827271f35
31 huntl.so         0x00007fe827271030
32 huntl.so         0x00007fe82726ff35
33 huntl.so         0x00007fe82726ee15
34 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007fe827299fe5
40 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  huntl.so         0x00007fe827273dd0
4  huntl.so         0x00007fe827273460
5  huntl.so         0x00007fe82727250d
6  huntl.so         0x00007fe827271a03
7  huntl.so         0x00007fe82727100b
8  huntl.so         0x00007fe82726ff35
9  huntl.so         0x00007fe82726ee15
10 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007fe827273ec7
15 huntl.so         0x00007fe82727461b
16 huntl.so         0x00007fe8272745f5
17 huntl.so         0x00007fe827273f39
18 huntl.so         0x00007fe8272737e3
19 huntl.so         0x00007fe827272c63
20 huntl.so         0x00007fe827271f35
21 huntl.so         0x00007fe827271030
22 huntl.so         0x00007fe82726ff35
23 huntl.so         0x00007fe82726ee15
24 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007fe82727386b
29 huntl.so         0x00007fe827272c63
30 huntl.so         0x00007fe827271f35
31 huntl.so         0x00007fe827271030
32 huntl.so         0x00007fe82726ff35
33 huntl.so         0x00007fe82726ee15
34 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007fe827299fe5
40 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  huntl.so         0x00007fe827273dd0
4  huntl.so         0x00007fe827273460
5  huntl.so         0x00007fe82727250d
6  huntl.so         0x00007fe827271a03
7  huntl.so         0x00007fe82727100b
8  huntl.so         0x00007fe82726ff35
9  huntl.so         0x00007fe82726ee15
10 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007fe827273ec7
15 huntl.so         0x00007fe82727461b
16 huntl.so         0x00007fe8272745f5
17 huntl.so         0x00007fe827273f39
18 huntl.so         0x00007fe8272737e3
19 huntl.so         0x00007fe827272c63
20 huntl.so         0x00007fe827271f35
21 huntl.so         0x00007fe827271030
22 huntl.so         0x00007fe82726ff35
23 huntl.so         0x00007fe82726ee15
24 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007fe82727386b
29 huntl.so         0x00007fe827272c63
30 huntl.so         0x00007fe827271f35
31 huntl.so         0x00007fe827271030
32 huntl.so         0x00007fe82726ff35
33 huntl.so         0x00007fe82726ee15
34 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007fe827299fe5
40 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  huntl.so         0x00007fe827273dd0
4  huntl.so         0x00007fe827273460
5  huntl.so         0x00007fe82727250d
6  huntl.so         0x00007fe827271a03
7  huntl.so         0x00007fe82727100b
8  huntl.so         0x00007fe82726ff35
9  huntl.so         0x00007fe82726ee15
10 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007fe827273ec7
15 huntl.so         0x00007fe82727461b
16 huntl.so         0x00007fe8272745f5
17 huntl.so         0x00007fe827273f39
18 huntl.so         0x00007fe8272737e3
19 huntl.so         0x00007fe827272c63
20 huntl.so         0x00007fe827271f35
21 huntl.so         0x00007fe827271030
22 huntl.so         0x00007fe82726ff35
23 huntl.so         0x00007fe82726ee15
24 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007fe82727386b
29 huntl.so         0x00007fe827272c63
30 huntl.so         0x00007fe827271f35
31 huntl.so         0x00007fe827271030
32 huntl.so         0x00007fe82726ff35
33 huntl.so         0x00007fe82726ee15
34 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007fe827299fe5
40 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  huntl.so         0x00007fe827273dd0
4  huntl.so         0x00007fe827273460
5  huntl.so         0x00007fe82727250d
6  huntl.so         0x00007fe827271a03
7  huntl.so         0x00007fe82727100b
8  huntl.so         0x00007fe82726ff35
9  huntl.so         0x00007fe82726ee15
10 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007fe827273ec7
15 huntl.so         0x00007fe82727461b
16 huntl.so         0x00007fe8272745f5
17 huntl.so         0x00007fe827273f39
18 huntl.so         0x00007fe8272737e3
19 huntl.so         0x00007fe827272c63
20 huntl.so         0x00007fe827271f35
21 huntl.so         0x00007fe827271030
22 huntl.so         0x00007fe82726ff35
23 huntl.so         0x00007fe82726ee15
24 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007fe82727386b
29 huntl.so         0x00007fe827272c63
30 huntl.so         0x00007fe827271f35
31 huntl.so         0x00007fe827271030
32 huntl.so         0x00007fe82726ff35
33 huntl.so         0x00007fe82726ee15
34 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007fe827299fe5
40 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  huntl.so         0x00007fe827273dd0
4  huntl.so         0x00007fe827273460
5  huntl.so         0x00007fe82727250d
6  huntl.so         0x00007fe827271a03
7  huntl.so         0x00007fe82727100b
8  huntl.so         0x00007fe82726ff35
9  huntl.so         0x00007fe82726ee15
10 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007fe827273ec7
15 huntl.so         0x00007fe82727461b
16 huntl.so         0x00007fe8272745f5
17 huntl.so         0x00007fe827273f39
18 huntl.so         0x00007fe8272737e3
19 huntl.so         0x00007fe827272c63
20 huntl.so         0x00007fe827271f35
21 huntl.so         0x00007fe827271030
22 huntl.so         0x00007fe82726ff35
23 huntl.so         0x00007fe82726ee15
24 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007fe82727386b
29 huntl.so         0x00007fe827272c63
30 huntl.so         0x00007fe827271f35
31 huntl.so         0x00007fe827271030
32 huntl.so         0x00007fe82726ff35
33 huntl.so         0x00007fe82726ee15
34 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007fe827299fe5
40 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007fe829ef4954
2  libc.so.6        0x00007fe8288ea4b0
3  huntl.so         0x00007fe827273dd0
4  huntl.so         0x00007fe827273460
5  huntl.so         0x00007fe82727250d
6  huntl.so         0x00007fe827271a03
7  huntl.so         0x00007fe82727100b
8  huntl.so         0x00007fe82726ff35
9  huntl.so         0x00007fe82726ee15
10 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007fe827273ec7
15 huntl.so         0x00007fe82727461b
16 huntl.so         0x00007fe8272745f5
17 huntl.so         0x00007fe827273f39
18 huntl.so         0x00007fe8272737e3
19 huntl.so         0x00007fe827272c63
20 huntl.so         0x00007fe827271f35
21 huntl.so         0x00007fe827271030
22 huntl.so         0x00007fe82726ff35
23 huntl.so         0x00007fe82726ee15
24 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007fe82726d6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007fe827279ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007fe82727386b
29 huntl.so         0x00007fe827272c63
30 huntl.so         0x00007fe827271f35
31 huntl.so         0x00007fe827271030
32 huntl.so         0x00007fe82726ff35
33 huntl.so         0x00007fe82726ee15
34 huntl.so         0x00007fe82726dbc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007fe82726b9cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007fe82726da80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007fe82726b6d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007fe827276d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007fe827299fe5
40 libLLVM-3.5.so.1 0x00007fe8295d84b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007fe8288d5830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007fe829ef4ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
