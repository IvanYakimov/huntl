WARNING: You're attempting to print out a bitcode file.
This is inadvisable as it may cause display problems. If
you REALLY want to taste LLVM bitcode first-hand, you
can force output with the `-f' option.

//test suite for test_strcpy
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
//test suite for test_strncpy
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
terminate called after throwing an instance of 'CVC4::RecoverableModalException'
  what():  Cannot get-value unless immediately preceded by SAT/INVALID or UNKNOWN response.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  libc.so.6        0x00007f89930b7428 gsignal + 56
4  libc.so.6        0x00007f89930b902a abort + 362
5  libstdc++.so.6   0x00007f89934db84d __gnu_cxx::__verbose_terminate_handler() + 365
6  libstdc++.so.6   0x00007f89934d96b6
7  libstdc++.so.6   0x00007f89934d9701
8  libstdc++.so.6   0x00007f89934d9919
9  libcvc4.so.6     0x00007f8990b8645a CVC4::SmtEngine::getAvailableModel(char const*) const + 874
10 libcvc4.so.6     0x00007f8990ba1ac2 CVC4::SmtEngine::getValue(CVC4::Expr const&) const + 882
11 huntl.so         0x00007f8991a5cfef solver::Solver::GetValue(CVC4::Expr) + 69
12 huntl.so         0x00007f8991a420af interpreter::Concretize(solver::Solver&, std::shared_ptr<memory::Holder>) + 330
13 huntl.so         0x00007f8991a53b39 interpreter::ReadabilityOptimizer::HandleBigram(std::shared_ptr<interpreter::Solution>, std::shared_ptr<interpreter::Solution>) + 301
14 huntl.so         0x00007f8991a541da interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 542
15 huntl.so         0x00007f8991a54069 interpreter::ReadabilityOptimizer::ConcretizationHelper(std::shared_ptr<interpreter::Solution>) + 173
16 huntl.so         0x00007f8991a54c0a interpreter::ReadabilityOptimizer::ConcretizationPass() + 196
17 huntl.so         0x00007f8991a65900 interpreter::TestGenerator::Do() + 648
18 huntl.so         0x00007f8991a0a307 interpreter::Gen::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 143
19 huntl.so         0x00007f8991a41320 std::_Function_handler<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >), interpreter::Gen>::_M_invoke(std::_Any_data const&, llvm::Function*&&, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >&&) + 127
20 huntl.so         0x00007f8991a3b9c1 std::function<std::shared_ptr<memory::Holder> (llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >)>::operator()(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) const + 121
21 huntl.so         0x00007f8991a3892a interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 222
22 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
23 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
24 huntl.so         0x00007f8991a4086b
25 huntl.so         0x00007f8991a3fc63
26 huntl.so         0x00007f8991a3ef35
27 huntl.so         0x00007f8991a3e030
28 huntl.so         0x00007f8991a3cf35
29 huntl.so         0x00007f8991a3be15
30 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
31 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
32 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
33 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
34 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
35 huntl.so         0x00007f8991a66fe5
36 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
37 opt-3.5          0x000000000041b8ac main + 3372
38 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
39 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
//test suite for test_strlcpy
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
0  libLLVM-3.5.so.1 0x00007f89946c1ec2 llvm::sys::PrintStackTrace(_IO_FILE*) + 50
1  libLLVM-3.5.so.1 0x00007f89946c1954
2  libc.so.6        0x00007f89930b74b0
3  huntl.so         0x00007f8991a40dd0
4  huntl.so         0x00007f8991a40460
5  huntl.so         0x00007f8991a3f50d
6  huntl.so         0x00007f8991a3ea03
7  huntl.so         0x00007f8991a3e00b
8  huntl.so         0x00007f8991a3cf35
9  huntl.so         0x00007f8991a3be15
10 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
11 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
12 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
13 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
14 huntl.so         0x00007f8991a40ec7
15 huntl.so         0x00007f8991a4161b
16 huntl.so         0x00007f8991a415f5
17 huntl.so         0x00007f8991a40f39
18 huntl.so         0x00007f8991a407e3
19 huntl.so         0x00007f8991a3fc63
20 huntl.so         0x00007f8991a3ef35
21 huntl.so         0x00007f8991a3e030
22 huntl.so         0x00007f8991a3cf35
23 huntl.so         0x00007f8991a3be15
24 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
25 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
26 huntl.so         0x00007f8991a3a6f1 interpreter::Evaluator::HandleCallInst(llvm::CallInst const&) + 121
27 huntl.so         0x00007f8991a46ceb interpreter::Matcher::visitCallInst(llvm::CallInst const&) + 47
28 huntl.so         0x00007f8991a4086b
29 huntl.so         0x00007f8991a3fc63
30 huntl.so         0x00007f8991a3ef35
31 huntl.so         0x00007f8991a3e030
32 huntl.so         0x00007f8991a3cf35
33 huntl.so         0x00007f8991a3be15
34 huntl.so         0x00007f8991a3abc9 interpreter::Evaluator::EvaluateTopFunction(llvm::Function*) + 169
35 huntl.so         0x00007f8991a389cb interpreter::Evaluator::CallFunction(llvm::Function*, std::shared_ptr<std::map<llvm::Value const*, std::shared_ptr<memory::Holder>, std::less<llvm::Value const*>, std::allocator<std::pair<llvm::Value const* const, std::shared_ptr<memory::Holder> > > > >) + 383
36 huntl.so         0x00007f8991a3aa80 interpreter::Evaluator::EvaluateFunctionList(std::__cxx11::list<llvm::Function*, std::allocator<llvm::Function*> >) + 380
37 huntl.so         0x00007f8991a386d9 interpreter::Evaluator::ProcessModule(llvm::Module*) + 1551
38 huntl.so         0x00007f8991a43d7c interpreter::Kernel::Do(llvm::Module&) + 40
39 huntl.so         0x00007f8991a66fe5
40 libLLVM-3.5.so.1 0x00007f8993da54b4 llvm::legacy::PassManagerImpl::run(llvm::Module&) + 772
41 opt-3.5          0x000000000041b8ac main + 3372
42 libc.so.6        0x00007f89930a2830 __libc_start_main + 240
43 opt-3.5          0x000000000041c309 _start + 41
Stack dump:
0.	Program arguments: opt-3.5 -load=./huntl.so -ll-voyager ./strcpy.ll 
1.	Running pass 'll-voyager virtual machine' on module './strcpy.ll'.
